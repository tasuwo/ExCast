///
/// @Generated by Mockolo
///

import Domain
@testable import Infrastructure
import RealmSwift
import RxSwift

public class PodcastRepositoryProtocolMock: PodcastRepositoryProtocol {
    private var _doneInit = false

    public init() { _doneInit = true }

    public var getAllCallCount = 0
    public var getAllHandler: (() -> (Single<[Podcast]>))?
    public func getAll() -> Single<[Podcast]> {
        getAllCallCount += 1
        if let getAllHandler = getAllHandler {
            return getAllHandler()
        }
        fatalError("getAllHandler returns can't have a default value thus its handler must be set")
    }

    public var addCallCount = 0
    public var addHandler: ((Podcast) -> (Completable))?
    public func add(_ podcast: Podcast) -> Completable {
        addCallCount += 1
        if let addHandler = addHandler {
            return addHandler(podcast)
        }
        fatalError("addHandler returns can't have a default value thus its handler must be set")
    }

    public var updateCallCount = 0
    public var updateHandler: ((Podcast) -> (Completable))?
    public func update(_ podcast: Podcast) -> Completable {
        updateCallCount += 1
        if let updateHandler = updateHandler {
            return updateHandler(podcast)
        }
        fatalError("updateHandler returns can't have a default value thus its handler must be set")
    }

    public var updateEpisodesMetaCallCount = 0
    public var updateEpisodesMetaHandler: ((Podcast) -> (Completable))?
    public func updateEpisodesMeta(_ podcast: Podcast) -> Completable {
        updateEpisodesMetaCallCount += 1
        if let updateEpisodesMetaHandler = updateEpisodesMetaHandler {
            return updateEpisodesMetaHandler(podcast)
        }
        fatalError("updateEpisodesMetaHandler returns can't have a default value thus its handler must be set")
    }

    public var removeCallCount = 0
    public var removeHandler: ((Podcast) -> (Completable))?
    public func remove(_ podcast: Podcast) -> Completable {
        removeCallCount += 1
        if let removeHandler = removeHandler {
            return removeHandler(podcast)
        }
        fatalError("removeHandler returns can't have a default value thus its handler must be set")
    }
}

public class EpisodeRepositoryProtocolMock: EpisodeRepositoryProtocol {
    private var _doneInit = false

    public init() { _doneInit = true }

    public var getAllCallCount = 0
    public var getAllHandler: ((URL) -> (Single<[Episode]>))?
    public func getAll(_ feedUrl: URL) -> Single<[Episode]> {
        getAllCallCount += 1
        if let getAllHandler = getAllHandler {
            return getAllHandler(feedUrl)
        }
        fatalError("getAllHandler returns can't have a default value thus its handler must be set")
    }

    public var updateCallCount = 0
    public var updateHandler: ((Episode.Identity, Playback?) -> (Completable))?
    public func update(_ id: Episode.Identity, playback: Playback?) -> Completable {
        updateCallCount += 1
        if let updateHandler = updateHandler {
            return updateHandler(id, playback)
        }
        fatalError("updateHandler returns can't have a default value thus its handler must be set")
    }

    public var updateEpisodeCallCount = 0
    public var updateEpisodeHandler: ((Episode) -> (Completable))?
    public func update(_ episode: Episode) -> Completable {
        updateEpisodeCallCount += 1
        if let updateEpisodeHandler = updateEpisodeHandler {
            return updateEpisodeHandler(episode)
        }
        fatalError("updateEpisodeHandler returns can't have a default value thus its handler must be set")
    }
}
